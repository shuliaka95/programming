#include "functions.h"

unsigned long long factorial(int n) {
    unsigned long long result = 1;
    for (int i = 2; i <= n; ++i) {
        result *= i;
    }
    return result;
}
unsigned long long pow(double base,int k) {
    double result = 1;
    for (int i = 0; i < k;++i) {
        result *= base;
    }
    return result;
}

unsigned long long fabs(double num) {
    double result = num;
    if (result < 0) {
        result = -result;
    }
    else {
        result = result;
    }
    return result;
}

double calculate_sum(double x, double epsilon, int& terms) {
    double sum = 0.0;
    double term;
    int k = 1;
    terms = 0;

    do {
        term = pow(-1, k) * pow(x / 2, 2 * k + 1) / (factorial(k) * factorial(k + 1));
        sum += term;
        k++;
        terms++;
    } while (fabs(term) >= epsilon);

    return sum;
}